<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fineapple.domain.user.repository.UserMapper">

    <resultMap id="UserDetailDtoMap" type="UserDetailDto">

        <!-- User -->
        <result property="userId" column="user_id"/>
        <result property="email" column="email"/>
        <result property="createDate" column="create_date"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="isActive" column="is_active"/>

        <!-- UserInfo  -->
        <result property="name" column="name"/>
        <result property="tel" column="tel"/>
        <result property="birth" column="birth"/>
        <result property="userRole" column="userRole"/>
        <result property="userStatus" column="userStatus"/>

        <!-- Address  -->
        <result property="deliveryId" column="deliveryId"/>
        <result property="address" column="address"/>
        <result property="city" column="city"/>
        <result property="country" column="country"/>
        <result property="region" column="region"/>
        <result property="postNum" column="post_Num"/>
    </resultMap>

    <select id="findUserById" parameterType="long" resultType="User">
        SELECT user_id     AS userId,
               email,
               create_date AS createDate,
               updated_at  AS updatedAt,
               is_active   AS isActive
        FROM User
        WHERE user_id = #{userId}
    </select>

    <select id="findAllUsers" resultType="User">
        SELECT user_id     AS userId,
               email       AS email,
               create_date AS createDate,
               updated_at  AS updatedAt,
               is_active   AS isActive
        FROM User
        ORDER BY user_id DESC
    </select>

    <select id="findUserDetailById" parameterType="long" resultMap="UserDetailDtoMap">
        SELECT u.user_id,
               u.email,
               u.is_active,
               u.create_date,
               u.updated_at,
               ui.name,
               ui.tel,
               ui.birth,
               ui.user_role,
               ui.user_status,
               ad.delivery_id,
               ad.address,
               ad.city,
               ad.country,
               ad.region,
               ad.post_num
        FROM User u
                 LEFT JOIN UserInfo ui ON u.user_id = ui.user_id
                 LEFT JOIN Address ad ON ui.user_info = ad.user_info
        WHERE u.user_id = #{userId}
    </select>

    <update id="updateUserIsActive" parameterType="map">
        UPDATE User
        SET is_active = #{isActive}
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserStatus" parameterType="map">
        UPDATE UserInfo
        SET user_status = #{userStatus}
        WHERE user_id = #{userId}
    </update>

    <select id="searchUserList" parameterType="UserSearchParam"
            resultType="UserDto">
        <![CDATA[
    SELECT
        'USER' AS userType,
        u.user_id AS userId,
        u.email,
        u.create_date AS createDate,
        u.updated_at AS updatedAt,
        u.is_active AS isActive
    FROM User u
    WHERE 1=1
    ]]>
        <if test="userId != null and userId != ''">
            <![CDATA[ AND u.user_id LIKE CONCAT('%', #{userId}, '%') ]]>
        </if>
        <if test="email != null and email != ''">
            <![CDATA[ AND u.email LIKE CONCAT('%', #{email}, '%') ]]>
        </if>
        <if test="isActive != null">
            <![CDATA[ AND u.is_active = #{isActive} ]]>
        </if>
        <if test="startDate != null">
            <![CDATA[ AND DATE(u.create_date) >= #{startDate} ]]>
        </if>
        <if test="endDate != null">
            <![CDATA[ AND DATE(u.create_date) <= #{endDate} ]]>
        </if>

        <![CDATA[
    UNION ALL
    SELECT
        'GUEST' AS userType,
        g.guest_id AS userId,
        g.name AS email,
        g.created_at AS createDate,
        NULL AS updatedAt,
        NULL AS isActive
    FROM Guest g
    WHERE 1=1
    ]]>

        <if test="userId != null and userId != ''">
            <![CDATA[ AND g.guest_id LIKE CONCAT('%', #{userId}, '%') ]]>
        </if>
        <if test="email != null and email != ''">
            <![CDATA[ AND g.name LIKE CONCAT('%', #{email}, '%') ]]>
        </if>
        <if test="startDate != null">
            <![CDATA[ AND DATE(g.created_at) >= #{startDate} ]]>
        </if>
        <if test="endDate != null">
            <![CDATA[ AND DATE(g.created_at) <= #{endDate} ]]>
        </if>

        <![CDATA[
         ORDER BY createDate
        ]]>
        <choose>
            <when test="sortDir != null and sortDir.toLowerCase().equals('asc')">
                <![CDATA[ ASC ]]>
            </when>
            <otherwise>
                <![CDATA[ DESC ]]>
            </otherwise>
        </choose>
    </select>


    <!-- 회원가입 쿼리 -->

    <insert id="insertUser" parameterType="UserRegistrationDto" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO User (email, password, create_date, is_active)
        VALUES (#{email}, #{password}, #{createDate}, 1)
    </insert>

    <insert id="insertUserInfo" parameterType="UserRegistrationDto">
        INSERT INTO UserInfo (name, birth, tel, user_id, user_role, user_status)
        VALUES (#{name}, #{birth}, #{tel}, #{userId}, #{userRole}, #{userStatus})
    </insert>

    <insert id="insertAddressWithUserInfoOnly" parameterType="UserRegistrationDto">
        INSERT INTO Address (user_info, name, tel)
        VALUES (#{userInfoId}, #{name}, #{tel})
    </insert>

    <select id="findByEmail" parameterType="string" resultMap="userResultMap">
        SELECT
            u.user_id, u.email, u.password, u.is_active, u.create_date, u.updated_at,
            ui.user_role, ui.name
        FROM User u
                 JOIN UserInfo ui ON u.user_id = ui.user_id
        WHERE u.email = #{email}
    </select>

    <select id="getLastInsertId" resultType="long">
        SELECT LAST_INSERT_ID()
    </select>

    <resultMap id="userResultMap" type="com.fineapple.domain.user.entity.User">
        <id property="userId" column="user_id"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="createDate" column="create_date"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="isActive" column="is_active"/>
        <result property="userRole" column="user_role"/>
    </resultMap>

    <select id="findUserDetailByEmail" parameterType="string" resultMap="UserDetailDtoMap">
        SELECT u.user_id,
               u.email,
               u.is_active,
               u.create_date,
               u.updated_at,
               ui.name,
               ui.tel,
               ui.birth,
               ui.user_role,
               ui.user_status,
               ad.delivery_id,
               ad.address,
               ad.city,
               ad.country,
               ad.region,
               ad.post_num
        FROM User u
                 LEFT JOIN UserInfo ui ON u.user_id = ui.user_id
                 LEFT JOIN Address ad ON ui.user_info = ad.user_info
        WHERE u.email = #{email}
    </select>

    <select id="findUserByIdForUpdate" resultType="User">
        SELECT * FROM User WHERE user_id = #{userId} FOR UPDATE
    </select>

    <select id="findByUsername" parameterType="string" resultMap="UserDetailDtoMap">
        SELECT ui.name
        FROM User u
            LEFT JOIN UserInfo ui on u.user_id = ui.user_id
        WHERE u.email = #{email}
    </select>

    <!--회원 소프트 삭제-->
    <update id="updateUserStatusByUserId" parameterType="long">
        UPDATE User u
            JOIN UserInfo ui ON u.user_id = ui.user_id
        SET ui.user_status = 'ME0202',
            u.is_active = 0
        WHERE u.user_id = #{userId}
#           AND ui.user_status != 'ME0202'
#           AND u.is_active != 1
    </update>


    <update id="updateUserDetailByUserId" parameterType="com.fineapple.domain.user.dto.UserDetailDto">
        UPDATE User u
        JOIN UserInfo ui ON u.user_id = ui.user_id
        LEFT JOIN Address a ON a.user_id = u.user_id
        <set>
            <if test="email != null">u.email = #{email},</if>
            <if test="name != null">ui.name = #{name},</if>
            <if test="birth != null">ui.birth = #{birth},</if>
            <if test="tel != null">ui.tel = #{tel},</if>
            <if test="address != null">a.address = #{address},</if>
            <if test="city != null">a.city = #{city},</if>
            <if test="country != null">a.country = #{country},</if>
            <if test="region != null">a.region = #{region},</if>
            <if test="postNum != null">a.postNum = #{postNum},</if>
        </set>
        WHERE u.user_id = #{userId}
    </update>

    <select id="findUserInfoIdById" parameterType="UserInfo">
        SELECT * FROM UserInfo WHERE user_id = #{userId} FOR UPDATE
    </select>

    <select id="findAddressByUserInfoId" parameterType="Address">
        Select * FROM Address WHERE user_info = #{userInfoId} FOR UPDATE
    </select>

    <!-- 회원 주소지 Insert -->
    <insert id="insertAddress" parameterType="com.fineapple.domain.user.dto.UserUpdateDto"
            useGeneratedKeys="true" keyProperty="deliveryId">
        INSERT INTO Address (
            name,
            tel,
            country,
            city,
            region,
            post_num,
            road_num,
            address,
            is_default,
            created_at,
            delivery_status,
            user_info
        )
        VALUES (
                   #{name},
                   #{tel},
                   #{country},
                   #{city},
                   #{region},
                   #{postNum},
                   #{roadNum},
                   #{address},
                   #{isDefault},
                   NOW(),
                   'SH0101',
                   #{userInfoId}
               )
    </insert>

    <update id="updateAddress" parameterType="com.fineapple.domain.user.dto.UserUpdateDto">
        UPDATE Address
        SET
            name = #{name},
            tel = #{tel},
            country = #{country},
            city = #{city},
            region = #{region},
            post_num = #{postNum},
            road_num = #{roadNum},
            address = #{address},
            is_default = #{isDefault},
            updated_at = NOW()
        WHERE delivery_id = #{deliveryId}
    </update>

    <!-- UserInfo 업데이트 -->
    <update id="updateUserInfo" parameterType="com.fineapple.domain.user.dto.UserUpdateDto">
        UPDATE UserInfo
        SET
            name = #{name},
            tel = #{tel},
            birth = #{birth},
            updated_at = NOW()
        WHERE user_info = #{userInfoId}
    </update>

    <select id="findUserRealNameById" parameterType="long" resultType="string">
        SELECT ui.name
        FROM User u
                 LEFT JOIN UserInfo ui on u.user_id = ui.user_id
        WHERE u.user_id = #{userId}
    </select>

</mapper>
