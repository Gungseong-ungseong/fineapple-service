services:
  mysql-main:
    image: mysql:8.4.3
    container_name: fineapple-main
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: fineapple
      HOSTNAME: mysql-main
    ports:
      - "3306:3306"
    networks:
      - app-net
    volumes:
      - mysql_main_data:/var/lib/mysql

  fastapi:
    build: ./fastapi-server
    container_name: fastapi-server
    ports:
      - "8000:8000"
    networks:
      - app-net
    depends_on:
      - mysql-main
    environment:
      HOSTNAME: fastapi-server

  batch:
    build: ./batch
    container_name: batch-job
    command: ["python", "predict_batch.py"]
    networks:
      - app-net
    depends_on:
      - fastapi
      - mysql-main
    restart: "no"
    environment:
      HOSTNAME: batch-job

  nginx:
    image: nginx:latest
    container_name: nginx-server
    ports:
      - "80:80"
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "/Users/imhangyu/Pictures/root_FineApple/FineApple/uploads:/usr/share/nginx/html/uploads"
    networks:
      - app-net
    environment:
      HOSTNAME: nginx-server


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node # 기본적으로 클러스터를 자동구현하지만 불필요
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m # 기본설정이 너무 용량이 크기때문에 줄임
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - app-net
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.1
    container_name: logstash
    ports:
      - "5000:5000"
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - elasticsearch
    networks:
      - app-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - app-net

volumes:
  mysql_main_data:
  elasticsearch-data:

networks:
  app-net:
    driver: bridge

